// Copyright 2021 stafiprotocol
// SPDX-License-Identifier: LGPL-3.0-only

// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "tk",
            "email": "tpkeeper.me@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/drop_info": {
            "get": {
                "description": "get user drop info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "get user drop info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user address",
                        "name": "user_address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user_handlers.RspDropInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/drop_list": {
            "get": {
                "description": "get drop list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "get drop list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user_handlers.RspDropList"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/drop_rate": {
            "get": {
                "description": "get drop rate",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "get drop rate",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Rsp"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user_handlers.RspDropRate"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "user_handlers.Drop": {
            "type": "object",
            "properties": {
                "drop_amount": {
                    "type": "string"
                },
                "user_address": {
                    "type": "string"
                }
            }
        },
        "user_handlers.DropInfo": {
            "type": "object",
            "properties": {
                "claimed_drop_amount": {
                    "type": "string"
                },
                "total_drop_amount": {
                    "type": "string"
                },
                "total_reth_amount": {
                    "type": "string"
                },
                "user_address": {
                    "type": "string"
                }
            }
        },
        "user_handlers.RspDropInfo": {
            "type": "object",
            "properties": {
                "drop_info": {
                    "$ref": "#/definitions/user_handlers.DropInfo"
                }
            }
        },
        "user_handlers.RspDropList": {
            "type": "object",
            "properties": {
                "drop_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user_handlers.Drop"
                    }
                }
            }
        },
        "user_handlers.RspDropRate": {
            "type": "object",
            "properties": {
                "drop_rate": {
                    "type": "string"
                }
            }
        },
        "utils.Rsp": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "xxxxx:8081",
	BasePath:    "/api",
	Schemes:     []string{},
	Title:       "drop API",
	Description: "drop api document.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
